{"ast":null,"code":"import { createAction } from \"../../utils/reducer/reducer.utils\";\nimport { CART_ACTION_TYPES } from \"./cart.types\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  // check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nexport const setIsCartOpen = boolean => createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, boolean);\nexport const addItemToCart = (cartItems, productToAdd) => {\n  const newCartItems = addCartItem(cartItems, productToAdd);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\nexport const removeItemToCart = (cartItems, cartItemToRemove) => {\n  const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\nexport const clearItemFromCart = (cartItems, cartItemToClear) => {\n  const newCartItems = clearCartItem(cartItems, cartItemToClear);\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};","map":{"version":3,"names":["createAction","CART_ACTION_TYPES","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","setIsCartOpen","boolean","SET_IS_CART_OPEN","addItemToCart","newCartItems","SET_CART_ITEMS","removeItemToCart","clearItemFromCart","cartItemToClear","clearCartItem"],"sources":["/Users/balagangapatnam/capstone/crwn-clothing/src/store/cart/cart.action.js"],"sourcesContent":["import { createAction } from \"../../utils/reducer/reducer.utils\";\nimport { CART_ACTION_TYPES } from \"./cart.types\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n    const existingCartItem = cartItems.find(\n      (cartItem) => cartItem.id === productToAdd.id\n    );\n  \n    if (existingCartItem) {\n      return cartItems.map((cartItem) =>\n        cartItem.id === productToAdd.id\n          ? { ...cartItem, quantity: cartItem.quantity + 1 }\n          : cartItem\n      );\n    }\n  \n    return [...cartItems, { ...productToAdd, quantity: 1 }];\n  };\n  \n  const removeCartItem = (cartItems, cartItemToRemove) => {\n    // find the cart item to remove\n    const existingCartItem = cartItems.find(\n      (cartItem) => cartItem.id === cartItemToRemove.id\n    );\n  \n    // check if quantity is equal to 1, if it is remove that item from the cart\n    if (existingCartItem.quantity === 1) {\n      return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n    }\n  \n    // return back cartitems with matching cart item with reduced quantity\n    return cartItems.map((cartItem) =>\n      cartItem.id === cartItemToRemove.id\n        ? { ...cartItem, quantity: cartItem.quantity - 1 }\n        : cartItem\n    );\n  };\n\n\nexport const setIsCartOpen = (boolean) => \n    createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, boolean);\n\n\nexport const addItemToCart = (cartItems, productToAdd) => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n  };\n\nexport const removeItemToCart = (cartItems, cartItemToRemove) => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n  };\n\nexport const clearItemFromCart = (cartItems, cartItemToClear) => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n  };"],"mappings":"AAAA,SAASA,YAAY,QAAQ,mCAAmC;AAChE,SAASC,iBAAiB,QAAQ,cAAc;AAEhD,MAAMC,WAAW,GAAGA,CAACC,SAAS,EAAEC,YAAY,KAAK;EAC7C,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CACpCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAC7C,CAAC;EAED,IAAIH,gBAAgB,EAAE;IACpB,OAAOF,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,GAC3B;MAAE,GAAGD,QAAQ;MAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;IAAE,CAAC,GAChDH,QACN,CAAC;EACH;EAEA,OAAO,CAAC,GAAGJ,SAAS,EAAE;IAAE,GAAGC,YAAY;IAAEM,QAAQ,EAAE;EAAE,CAAC,CAAC;AACzD,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACR,SAAS,EAAES,gBAAgB,KAAK;EACtD;EACA,MAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CACpCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKI,gBAAgB,CAACJ,EACjD,CAAC;;EAED;EACA,IAAIH,gBAAgB,CAACK,QAAQ,KAAK,CAAC,EAAE;IACnC,OAAOP,SAAS,CAACU,MAAM,CAAEN,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKI,gBAAgB,CAACJ,EAAE,CAAC;EAC5E;;EAEA;EACA,OAAOL,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,KAAKI,gBAAgB,CAACJ,EAAE,GAC/B;IAAE,GAAGD,QAAQ;IAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;EAAE,CAAC,GAChDH,QACN,CAAC;AACH,CAAC;AAGH,OAAO,MAAMO,aAAa,GAAIC,OAAO,IACjCf,YAAY,CAACC,iBAAiB,CAACe,gBAAgB,EAAED,OAAO,CAAC;AAG7D,OAAO,MAAME,aAAa,GAAGA,CAACd,SAAS,EAAEC,YAAY,KAAK;EACtD,MAAMc,YAAY,GAAGhB,WAAW,CAACC,SAAS,EAAEC,YAAY,CAAC;EACzD,OAAOJ,YAAY,CAACC,iBAAiB,CAACkB,cAAc,EAAED,YAAY,CAAC;AACrE,CAAC;AAEH,OAAO,MAAME,gBAAgB,GAAGA,CAACjB,SAAS,EAAES,gBAAgB,KAAK;EAC7D,MAAMM,YAAY,GAAGP,cAAc,CAACR,SAAS,EAAES,gBAAgB,CAAC;EAChE,OAAOZ,YAAY,CAACC,iBAAiB,CAACkB,cAAc,EAAED,YAAY,CAAC;AACrE,CAAC;AAEH,OAAO,MAAMG,iBAAiB,GAAGA,CAAClB,SAAS,EAAEmB,eAAe,KAAK;EAC7D,MAAMJ,YAAY,GAAGK,aAAa,CAACpB,SAAS,EAAEmB,eAAe,CAAC;EAC9D,OAAOtB,YAAY,CAACC,iBAAiB,CAACkB,cAAc,EAAED,YAAY,CAAC;AACrE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}