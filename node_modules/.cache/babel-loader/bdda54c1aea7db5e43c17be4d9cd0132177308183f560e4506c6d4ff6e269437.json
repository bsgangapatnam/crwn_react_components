{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\n//import logger from 'redux-logger';\n\nimport { rootReducer } from './root-reducer';\nconst loggerMiddleware = store => next => action => {\n  if (!collection.type) {\n    return next(action);\n  }\n  next(action);\n};\nconst middleWares = [process.env.NODE_ENV === 'development' && logger].filter(Boolean);\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\nexport const store = createStore(rootReducer, undefined, composedEnhancers);","map":{"version":3,"names":["compose","createStore","applyMiddleware","rootReducer","loggerMiddleware","store","next","action","collection","type","middleWares","process","env","NODE_ENV","logger","filter","Boolean","composedEnhancers","undefined"],"sources":["/Users/balagangapatnam/capstone/crwn-clothing/src/store/store.js"],"sourcesContent":["import { compose, createStore, applyMiddleware } from 'redux';\n//import logger from 'redux-logger';\n\nimport { rootReducer } from './root-reducer';\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n  if(!collection.type) {\n    return next(action);\n  }\n\n  next(action);\n}\n\nconst middleWares = [process.env.NODE_ENV === 'development' && logger].filter(\n  Boolean\n);\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\n\nexport const store = createStore(rootReducer, undefined, composedEnhancers);"],"mappings":"AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAC7D;;AAEA,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,gBAAgB,GAAIC,KAAK,IAAMC,IAAI,IAAMC,MAAM,IAAK;EACxD,IAAG,CAACC,UAAU,CAACC,IAAI,EAAE;IACnB,OAAOH,IAAI,CAACC,MAAM,CAAC;EACrB;EAEAD,IAAI,CAACC,MAAM,CAAC;AACd,CAAC;AAED,MAAMG,WAAW,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIC,MAAM,CAAC,CAACC,MAAM,CAC3EC,OACF,CAAC;AAED,MAAMC,iBAAiB,GAAGjB,OAAO,CAACE,eAAe,CAAC,GAAGQ,WAAW,CAAC,CAAC;AAElE,OAAO,MAAML,KAAK,GAAGJ,WAAW,CAACE,WAAW,EAAEe,SAAS,EAAED,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}